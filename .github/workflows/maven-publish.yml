# This workflow will :
# check branch name and save environement variable
# build a package using Maven
# deploy package on Github project page
# push generate jar to middleware

name: Maven Package

on:
  push:
    branches: [ main, develop ]

jobs:
  build:

    # setup os
    runs-on: ubuntu-latest

    steps:
      # Checks-out repository under Github workspace
      - uses: actions/checkout@v2

      # Setup java
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      # Check branch name and put name in env variable
      - name: Some check on branch
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "::set-output name=env_name::Production"
          elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
          echo "::set-output name=env_name::Developpement"
          else
          echo "::set-output name=env_name::Features"
          fi

      # Setup maven settings.xml
      - uses: s4u/maven-settings-action@v2.4.1
        with:
          servers: |
            [{
                "id": "github",
                "username": "${{ secrets.GIT_USER }}",
                "password": "${{ secrets.GIT_PASSWORD }}"
            }]

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build using Maven
      - name: Build with Maven
        id: maven_build
        run: |
          if [ "${{ steps.branch_check.outputs.env_name }}" = "Production" ]; then
          mvm --batch-mode -B -Pprod package --file pom.xml
          echo "::set-output name=env_jar::prod"
          elif [ "${{ steps.branch_check.outputs.env_name }}" = Developpement" ]; then
          mvm --batch-mode -B -Pdev package --file pom.xml
          echo "::set-output name=env_jar::dev"
          else
          mvm package
          fi

      # Publish jar to infrastructure
      - name: Publish
        id: bcAction
        uses: fjogeleit/http-request-action@master
        with:
          url: 'http://54.36.124.50:3000/'
          data: '{"type": "api" ,"version": "${{ steps.branch_check.outputs.env_name }}" }'
          files: '{ "file": "${{ github.workspace }}/target/BuildersCoffeeAPI-1.0.jar" }'
          username: ${{ secrets.INFRA_USER }}
          password: ${{ secrets.INFRA_PASSWORD }}

      # Deploy Package to Github
      - name: Publish to GitHub Packages Apache Maven
        run: mvn --batch-mode -B -Pgithub-prod deploy
        env:
          GITHUB_TOKEN: ${{ secrets.INFRA_TOKEN }}

    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }} # Save branche name
      env_jar: ${{ steps.maven_build.outputs.env_jar }} # Save jar version
